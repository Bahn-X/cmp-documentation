(self.webpackChunkcmp_documentation_website=self.webpackChunkcmp_documentation_website||[]).push([[411],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||c;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5633:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l},default:function(){return s}});var r=n(2122),a=n(9756),c=(n(7294),n(3905)),o={},i={unversionedId:"api/interfaces/onconsentchangecallback",id:"api/interfaces/onconsentchangecallback",isDocsHomePage:!1,title:"onconsentchangecallback",description:"@bahn-x/cmp-sdk / OnConsentChangeCallback",source:"@site/docs/api/interfaces/onconsentchangecallback.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/onconsentchangecallback",permalink:"/cmp-documentation/docs/api/interfaces/onconsentchangecallback",version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"consentchangelistener",permalink:"/cmp-documentation/docs/api/interfaces/consentchangelistener"},next:{title:"service",permalink:"/cmp-documentation/docs/api/interfaces/service"}},l=[{value:"Callable",id:"callable",children:[]}],p={toc:l};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/README"},"@bahn-x/cmp-sdk")," / OnConsentChangeCallback"),(0,c.kt)("h1",{id:"interface-onconsentchangecallback"},"Interface: OnConsentChangeCallback"),(0,c.kt)("p",null,"Callback for consent change listener."),(0,c.kt)("h2",{id:"callable"},"Callable"),(0,c.kt)("p",null,"\u25b8 ",(0,c.kt)("strong",{parentName:"p"},"OnConsentChangeCallback"),"(",(0,c.kt)("inlineCode",{parentName:"p"},"error"),": ",(0,c.kt)("em",{parentName:"p"},"null")," ","|"," Error, ",(0,c.kt)("inlineCode",{parentName:"p"},"services?"),": ",(0,c.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/service"},(0,c.kt)("em",{parentName:"a"},"Service")),"[]): ",(0,c.kt)("em",{parentName:"p"},"void")),(0,c.kt)("p",null,"Error-first callback containing (updated) services as second parameter."),(0,c.kt)("h4",{id:"parameters"},"Parameters:"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("inlineCode",{parentName:"td"},"error")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"null")," ","|"," Error"),(0,c.kt)("td",{parentName:"tr",align:"left"},"Error object (if applicable)")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("inlineCode",{parentName:"td"},"services?")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"/cmp-documentation/docs/api/interfaces/service"},(0,c.kt)("em",{parentName:"a"},"Service")),"[]"),(0,c.kt)("td",{parentName:"tr",align:"left"},"List of services.")))),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns:")," ",(0,c.kt)("em",{parentName:"p"},"void")))}s.isMDXComponent=!0}}]);