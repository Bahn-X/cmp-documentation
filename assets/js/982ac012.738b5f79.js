(self.webpackChunkcmp_documentation_website=self.webpackChunkcmp_documentation_website||[]).push([[983],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=c(n),d=r,u=k["".concat(l,".").concat(d)]||k[d]||m[d]||i;return n?a.createElement(u,p(p({ref:t},s),{},{components:n})):a.createElement(u,p({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=k;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var c=2;c<i;c++)p[c]=n[c];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1752:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return o},toc:function(){return l},default:function(){return s}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),p={},o={unversionedId:"api/README",id:"api/README",isDocsHomePage:!1,title:"@bahn-x/cmp-sdk",description:"Table of contents",source:"@site/docs/api/README.md",sourceDirName:"api",slug:"/api/README",permalink:"/cmp-documentation/docs/api/README",version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Migrating Adobe Analytics loaded via Adobe Launch to Tealium",permalink:"/cmp-documentation/docs/examples/migrate-launch-tealium"},next:{title:"cmpoptions",permalink:"/cmp-documentation/docs/api/interfaces/cmpoptions"}},l=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Interfaces",id:"interfaces",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"acceptService",id:"acceptservice",children:[]},{value:"consentChangeListener",id:"consentchangelistener",children:[]},{value:"getConsentForService",id:"getconsentforservice",children:[]},{value:"getService",id:"getservice",children:[]},{value:"getServices",id:"getservices",children:[]},{value:"init",id:"init",children:[]},{value:"isInitialized",id:"isinitialized",children:[]},{value:"rejectService",id:"rejectservice",children:[]},{value:"showConsentLayer",id:"showconsentlayer",children:[]},{value:"showSecondLayer",id:"showsecondlayer",children:[]}]}],c={toc:l};function s(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/interfaces/cmpoptions"},"CmpOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/interfaces/consent"},"Consent")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/interfaces/consentchangelistener"},"ConsentChangeListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/interfaces/onconsentchangecallback"},"OnConsentChangeCallback")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/interfaces/service"},"Service"))),(0,i.kt)("h3",{id:"functions"},"Functions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#acceptservice"},"acceptService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#consentchangelistener"},"consentChangeListener")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#getconsentforservice"},"getConsentForService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#getservice"},"getService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#getservices"},"getServices")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#init"},"init")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#isinitialized"},"isInitialized")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#rejectservice"},"rejectService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#showconsentlayer"},"showConsentLayer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cmp-documentation/docs/api/README#showsecondlayer"},"showSecondLayer"))),(0,i.kt)("h2",{id:"functions-1"},"Functions"),(0,i.kt)("h3",{id:"acceptservice"},"acceptService"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"acceptService"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("p",null,"A method for accepting a single service."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { acceptService } from '@bahn-x/cmp-sdk';\nacceptService('service_id').then(() => {\n  // do something\n});\n")),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"service id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"consentchangelistener"},"consentChangeListener"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"consentChangeListener"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"callback"),": ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/onconsentchangecallback"},(0,i.kt)("em",{parentName:"a"},"OnConsentChangeCallback")),"): ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/consentchangelistener"},(0,i.kt)("em",{parentName:"a"},"ConsentChangeListener"))),(0,i.kt)("p",null,'Returns listener object to allow listening to consent change events (either an actual change or simply a button click: "save selection" or "save all" etc.).'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { consentChangeListener } from '@bahn-x/cmp-sdk';\n// React\nuseEffect(() => {\n   const handler = (error, services) => {\n     if (error) console.error(error);\n     console.log('consent change', services);\n   };\n   const listener = consentChangeListener(handler);\n   // start listener on component mount\n   listener.start();\n   // stop listener on unmount\n   return () => {\n      listener.stop();\n   }\n}, [])\n")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"callback")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/cmp-documentation/docs/api/interfaces/onconsentchangecallback"},(0,i.kt)("em",{parentName:"a"},"OnConsentChangeCallback"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Error-first callback")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/consentchangelistener"},(0,i.kt)("em",{parentName:"a"},"ConsentChangeListener"))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getconsentforservice"},"getConsentForService"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getConsentForService"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/consent"},(0,i.kt)("em",{parentName:"a"},"Consent"))," ","|"," ",(0,i.kt)("em",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"Returns the consent for a service."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { getConsentForService } from '@bahn-x/cmp-sdk';\nconst consent = getConsentForService('service_id');\nif (consent && consent.status) {\n  // has consent\n}\n")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"service id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/consent"},(0,i.kt)("em",{parentName:"a"},"Consent"))," ","|"," ",(0,i.kt)("em",{parentName:"p"},"undefined")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getservice"},"getService"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getService"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/service"},(0,i.kt)("em",{parentName:"a"},"Service"))," ","|"," ",(0,i.kt)("em",{parentName:"p"},"undefined")),(0,i.kt)("p",null,"Returns a service by id."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { getService } from '@bahn-x/cmp-sdk';\nconst service = getService('service_id');\nif (service) {\n  // do something\n}\n")),(0,i.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"service id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/service"},(0,i.kt)("em",{parentName:"a"},"Service"))," ","|"," ",(0,i.kt)("em",{parentName:"p"},"undefined")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getservices"},"getServices"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getServices"),"(): ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/service"},(0,i.kt)("em",{parentName:"a"},"Service")),"[]"),(0,i.kt)("p",null,"Returns list of services configured in the CMP.\nList can be empty if no services could be found."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { getServices } from '@bahn-x/cmp-sdk';\nconst services = getServices();\nservices.map((service) => {\n  // do something\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("a",{parentName:"p",href:"/cmp-documentation/docs/api/interfaces/service"},(0,i.kt)("em",{parentName:"a"},"Service")),"[]"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"init"},"init"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"init"),"(): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("p",null,"Initializes the SDK. Returns an empty Promise, indicating that the SDK is ready to use."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { init } from '@bahn-x/cmp-sdk';\ninit().then(() => console.log('SDK is initialized'));\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isinitialized"},"isInitialized"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isInitialized"),"(): ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Returns true if CMP is initialized and false if not."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { isInitialized } from '@bahn-x/cmp-sdk';\nif (isInitialized()) {\n  // do something\n};\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rejectservice"},"rejectService"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"rejectService"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,i.kt)("em",{parentName:"p"},"string"),"): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("p",null,"A method for rejecting a single service."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { rejectService } from '@bahn-x/cmp-sdk';\nrejectService('service_id').then(() => {\n  // do something\n});\n")),(0,i.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"service id")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"showconsentlayer"},"showConsentLayer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"showConsentLayer"),"(): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("p",null,"Displays the consent layer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { showConsentLayer } from '@bahn-x/cmp-sdk';\nshowConsentLayer();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"showsecondlayer"},"showSecondLayer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"showSecondLayer"),"(): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"),(0,i.kt)("p",null,"Displays the second layer of the consent layer, offering direct access to the service settings."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { showSecondLayer } from '@bahn-x/cmp-sdk';\nshowSecondLayer();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">"))}s.isMDXComponent=!0}}]);